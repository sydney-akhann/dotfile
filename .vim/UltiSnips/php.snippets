global !p

def namespace(snip, path):
    import os
    namespace = pathToNamespace(path)
    if (len(namespace) == 0):
        return ''
    return snip.mkline(namespace + ';') + os.linesep

def pathToNamespace(path):
    import re
    path = path.replace('\\', '/')

    parts = []
    for part in path.split('/'):
        if re.match('^[A-Z]', part):
            parts.append(part)
        else:
            parts = []
    parts.pop()

    return '\\'.join(parts)

endglobal

snippet class "Class file" !
<?php

namespace ${1:`!p snip.rv = namespace(snip, path)`}

/**
 * Class $2
 * @author ${4:`!v g:snips_author`}
 */
class ${2:`!p snip.rv = snip.basename`}
{
    ${3: //code...}
}
endsnippet

snippet m "method"
/**
 * @param ${2/, /\n     * \@param mixed /g}
 */
public function ${1:method}(${2:$dependencies})
{
    ${3://code...}
}
endsnippet
